{"version":3,"sources":["constants/Color.ts","constants/MediaPickerError.ts","components/Text.ts","components/Layout.tsx","components/Image.ts","components/Card.tsx","components/Button.tsx","components/Circ.ts","components/Rect.ts","hooks/useMediaPicker.ts","hooks/useImageProc.web.ts","App.tsx","hooks/useScreen.ts","hooks/useAuth0.web.ts"],"names":["Color","MediaPickerError","Text","styled","color","WHITE","fontSize","shadow","Column","SafeAreaView","ORANGE","Row","View","width","Layout","header","footer","children","onPressFooter","TouchableOpacity","onPress","Image","Wrapper","Card","image","caption","fallback","renderContent","source","BLACK","Button","textColor","Circ","Rect","fnsMap","Map","CAMERA","ImagePicker","CAMERA_ROLL","b64toBlob","dataURI","type","byteString","atob","split","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","YEAR","Date","getFullYear","App","useFonts","PressStart2P_400Regular","fontsLoaded","useState","Dimensions","get","setWidth","height","setHeight","updateScreen","useEffect","addEventListener","removeEventListener","useScreen","screen","opts","allowsEditing","aspect","quality","ask","useCallback","perm","a","async","Constants","platform","ios","askAsync","status","Error","PERMISSION","run","cancelled","result","CANCELLED","useMediaPicker","pick","snap","uri","ext","name","getTime","toString","blob","formData","FormData","append","manifest","extra","imageProcFormField","fetch","imageProcHost","method","body","res","json","processImage","client","useRef","Auth0Client","domain","authDomain","client_id","authClientId","redirect_uri","authRedirectUri","cacheLocation","user","setUser","logOut","current","logout","logIn","loginWithPopup","then","getUser","window","location","pathname","handleRedirectCallback","history","pushState","document","title","getTokenSilently","useAuth0","remoteImg","setRemoteImg","localImg","setLocalImg","flowStep","setFlowStep","needAuth","setNeedAuth","img","handleImageInput","cb","handleFeedback","MailComposer","recipients","ccRecipients","subject","handleLogOut","handleAboutWindow","web","open","Alert","alert","text","style","handleShare","replace","Share","share","message","StatusBar","GRAY","onLongPress","renderImageInput"],"mappings":"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","file":"static/js/app.9ecc96b3.chunk.js","sourcesContent":["export enum Color {\n\tORANGE = \"#ea6718\",\n\tWHITE = \"white\",\n\tGRAY = \"gray\",\n\tBLACK = \"black\",\n}\n","export enum MediaPickerError {\n\tCANCELLED = \"Cancelled by user\",\n\tPERMISSION = \"Permission error\",\n}\n","import styled from \"styled-components/native\";\n\nimport { Color } from \"../constants\";\n\ninterface Props {\n\tcolor?: Color;\n\tshadow?: boolean;\n\tfontSize?: number;\n}\n\nexport let Text = styled.Text<Props>`\n\tpadding: 10px;\n\tfont-family: \"PressStart2P_400Regular\";\n\ttext-align: center;\n\tcolor: ${({ color = Color.WHITE }) => color};\n\tfont-size: ${({ fontSize = 12 }) => fontSize + \"px\"};\n\ttext-shadow: ${({ shadow = false }) => (shadow ? \"-2px 2px 1px black\" : \"none\")};\n`;\n","import React from \"react\";\nimport { TouchableOpacity } from \"react-native\";\nimport styled from \"styled-components/native\";\n\nimport { Color } from \"../constants\";\nimport { Text } from \"./Text\";\n\ninterface Props {\n\twidth: number;\n\theader: string;\n\tfooter: string;\n\tchildren: React.ReactChild | React.ReactChild[];\n\tonPressFooter(): void;\n}\n\nlet Column = styled.SafeAreaView`\n\tflex: 1;\n\tbackground: ${Color.ORANGE};\n`;\n\nlet Row = styled.View<{ width: number }>`\n\tflex: 1;\n\talign-items: stretch;\n\tjustify-content: center;\n\tflex-direction: ${({ width }) => (width > 1024 ? \"row\" : \"column\")};\n`;\n\nexport function Layout({ width, header, footer, children, onPressFooter }: Props) {\n\treturn (\n\t\t<Column>\n\t\t\t<Text shadow fontSize={42}>\n\t\t\t\t{header}\n\t\t\t</Text>\n\t\t\t<Row width={width}>{children}</Row>\n\t\t\t{typeof onPressFooter === \"function\" ? (\n\t\t\t\t<TouchableOpacity onPress={onPressFooter}>\n\t\t\t\t\t<Text shadow>{footer}</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t) : (\n\t\t\t\t<Text shadow>{footer}</Text>\n\t\t\t)}\n\t\t</Column>\n\t);\n}\n","import styled from \"styled-components/native\";\n\nexport let Image = styled.Image`\n\tflex: 1;\n\twidth: 100%;\n\theight: 100%;\n\tmax-width: 100%;\n\tmax-height: 100%;\n`;\n","import { ImageInfo } from \"expo-image-picker/build/ImagePicker.types\";\nimport React, { ReactChild } from \"react\";\nimport { GestureResponderEvent } from \"react-native\";\nimport styled from \"styled-components/native\";\n\nimport { Color } from \"../constants\";\nimport { Image } from \"./Image\";\nimport { Text } from \"./Text\";\n\ninterface Props {\n\timage?: Pick<ImageInfo, \"uri\">;\n\tcaption?: string;\n\tfallback: ReactChild | ReactChild[];\n\tonPress?: (e?: GestureResponderEvent) => void;\n}\n\nexport let Wrapper = styled.View`\n\tflex: 1;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground: ${Color.WHITE};\n\tbox-shadow: -2px 2px 1px black;\n\tborder-radius: 12px;\n\tmargin: 10px;\n\tpadding: 15px;\n`;\n\nlet TouchableOpacity = styled.TouchableOpacity`\n\tflex: 1;\n\twidth: 100%;\n`;\n\nexport function Card({ image, caption, fallback, onPress }: Props) {\n\tlet renderContent = () => (\n\t\t<>\n\t\t\t<Image source={image!} />\n\t\t\t{caption && <Text color={Color.BLACK}>{caption}</Text>}\n\t\t</>\n\t);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t{!image ? (\n\t\t\t\tfallback\n\t\t\t) : typeof onPress === \"function\" ? (\n\t\t\t\t<TouchableOpacity onPress={onPress}>{renderContent()}</TouchableOpacity>\n\t\t\t) : (\n\t\t\t\trenderContent()\n\t\t\t)}\n\t\t</Wrapper>\n\t);\n}\n","import React from \"react\";\nimport styled from \"styled-components/native\";\n\nimport { Color } from \"../constants\";\nimport { Text } from \"./Text\";\n\ninterface Props {\n\tonPress?: () => void;\n\tchildren?: string;\n\ttextColor?: Color;\n\tcolor?: Color;\n}\n\nlet TouchableOpacity = styled.TouchableOpacity<Pick<Props, \"color\">>`\n\tborder: ${({ color = Color.BLACK }) => `1px solid ${color}`};\n`;\n\nexport function Button({ children, onPress, textColor = Color.BLACK }: Props) {\n\treturn (\n\t\t<TouchableOpacity onPress={onPress}>\n\t\t\t<Text color={textColor}>{children}</Text>\n\t\t</TouchableOpacity>\n\t);\n}\n","import styled from \"styled-components/native\";\n\nexport let Circ = styled.TouchableOpacity`\n\theight: 200px;\n\twidth: 200px;\n\tborder-radius: 100px;\n\tborder: 3px dashed gray;\n\tposition: absolute;\n`;\n","import styled from \"styled-components/native\";\n\nexport let Rect = styled.View`\n\twidth: 185px;\n\theight: 185px;\n\tborder: 3px dashed gray;\n\tposition: absolute;\n`;\n","import Constants from \"expo-constants\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport {\n\tImageInfo,\n\tImagePickerOptions,\n\tImagePickerResult,\n} from \"expo-image-picker/build/ImagePicker.types\";\nimport { askAsync, CAMERA, CAMERA_ROLL, PermissionType } from \"expo-permissions\";\nimport { useCallback } from \"react\";\n\nimport { MediaPickerError } from \"../constants\";\n\ntype Pick = () => Promise<ImageInfo>;\ntype Snap = () => Promise<ImageInfo>;\n\nlet fnsMap = new Map<PermissionType, (opts: ImagePickerOptions) => Promise<ImagePickerResult>>([\n\t[CAMERA, ImagePicker.launchCameraAsync],\n\t[CAMERA_ROLL, ImagePicker.launchImageLibraryAsync],\n]);\n\nexport function useMediaPicker(\n\topts: ImagePickerOptions = { allowsEditing: true, aspect: [4, 3], quality: 0 }\n): [Pick, Snap] {\n\tlet ask = useCallback(async (perm: PermissionType): Promise<true> => {\n\t\tif (Constants.platform?.ios) {\n\t\t\tlet { status } = await askAsync(perm);\n\t\t\tif (status === \"granted\") return true;\n\t\t\telse throw new Error(MediaPickerError.PERMISSION);\n\t\t} else return true;\n\t}, []);\n\tlet run = useCallback(async (perm: PermissionType): Promise<ImageInfo> => {\n\t\tif (await ask(perm)) {\n\t\t\tlet { cancelled, ...result } = await fnsMap.get(perm)!(opts);\n\t\t\tif (cancelled) throw new Error(MediaPickerError.CANCELLED);\n\t\t\treturn result as ImageInfo;\n\t\t}\n\t}, []);\n\treturn [() => run(CAMERA_ROLL), () => run(CAMERA)];\n}\n","import Constants from \"expo-constants\";\nimport { useCallback } from \"react\";\n\nimport { Upload } from \"./useImageProc\";\n\nexport function useImageProc(): [Upload] {\n\tlet upload: Upload = useCallback(async ({ uri }) => {\n\t\tlet ext = uri.split(\";\")[0].split(\"/\")[1];\n\t\tlet name = new Date().getTime().toString() + \".\" + ext;\n\t\tlet blob = b64toBlob(uri, \"image/jpeg\");\n\t\tlet formData = new FormData();\n\t\tformData.append(Constants.manifest.extra.imageProcFormField, blob, name);\n\t\tlet res = await fetch(Constants.manifest.extra.imageProcHost, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: formData,\n\t\t});\n\t\treturn res.json();\n\t}, []);\n\treturn [upload];\n}\n\nfunction b64toBlob(dataURI: string, type: string): Blob {\n\tvar byteString = atob(dataURI.split(\",\")[1]);\n\tvar ab = new ArrayBuffer(byteString.length);\n\tvar ia = new Uint8Array(ab);\n\n\tfor (var i = 0; i < byteString.length; i++) {\n\t\tia[i] = byteString.charCodeAt(i);\n\t}\n\treturn new Blob([ab], { type });\n}\n","import Constants from \"expo-constants\";\nimport { ImageInfo } from \"expo-image-picker/build/ImagePicker.types\";\nimport * as MailComposer from \"expo-mail-composer\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { Alert, Share } from \"react-native\";\n\nimport { PressStart2P_400Regular, useFonts } from \"@expo-google-fonts/press-start-2p\";\n\nimport { Button, Card, Circ, Layout, Rect, Text } from \"./components\";\nimport { Color } from \"./constants\";\nimport { useAuth0, useImageProc, useMediaPicker, useScreen } from \"./hooks\";\n\nlet YEAR = new Date().getFullYear();\n\nexport default function App() {\n\tlet [fontsLoaded] = useFonts({ PressStart2P_400Regular });\n\tlet [screen] = useScreen();\n\tlet [pick, snap] = useMediaPicker();\n\tlet [processImage] = useImageProc();\n\tlet [user, logIn, logOut] = useAuth0();\n\tlet [remoteImg, setRemoteImg] = useState<Pick<ImageInfo, \"uri\">>(null!);\n\tlet [localImg, setLocalImg] = useState<Pick<ImageInfo, \"uri\">>(null!);\n\tlet [flowStep, setFlowStep] = useState(\"Waiting\\nfor input\");\n\tlet [needAuth, setNeedAuth] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (localImg) {\n\t\t\tif (!user) setNeedAuth(true);\n\t\t\telse if (user && !remoteImg) {\n\t\t\t\tsetNeedAuth(false);\n\t\t\t\tsetFlowStep(\"Loading...\");\n\t\t\t\tprocessImage(localImg).then(img => {\n\t\t\t\t\tsetRemoteImg(img);\n\t\t\t\t\tsetFlowStep(\"Waiting\\nfor input\");\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [localImg, user]);\n\n\tlet handleImageInput = useCallback(\n\t\tasync (cb: typeof pick | typeof snap): Promise<void> => cb().then(setLocalImg),\n\t\t[setLocalImg]\n\t);\n\n\tlet handleFeedback = useCallback(() => {\n\t\tMailComposer.composeAsync({\n\t\t\trecipients: [\"askhat.bikmetov@akvelon.com\"],\n\t\t\tccRecipients: [\"nail.shakirov@akvelon.com\"],\n\t\t\tsubject: \"PixelArt feedback\",\n\t\t});\n\t}, []);\n\n\tlet handleLogOut = useCallback(() => {\n\t\tsetLocalImg(null!);\n\t\tsetRemoteImg(null!);\n\t\tlogOut();\n\t}, [logOut]);\n\n\tlet handleAboutWindow = useCallback(() => {\n\t\tif (Constants.platform?.web) {\n\t\t\twindow.open(\"https://expo.io/@akvelon/projects/pixelart\");\n\t\t} else {\n\t\t\tAlert.alert(\"PixelArt\", `Akvelon Kazan © ${YEAR}`, [\n\t\t\t\t{ text: \"Close\" },\n\t\t\t\t{ text: \"Share Feedback\", onPress: handleFeedback },\n\t\t\t\t{\n\t\t\t\t\tstyle: \"cancel\",\n\t\t\t\t\ttext: user ? \"Log Out\" : \"Log In\",\n\t\t\t\t\tonPress: user ? handleLogOut : logIn,\n\t\t\t\t},\n\t\t\t]);\n\t\t}\n\t}, [handleFeedback, handleLogOut, logIn, user]);\n\n\tlet handleShare = useCallback(() => {\n\t\tConstants.platform?.web\n\t\t\t? window.open(remoteImg.uri.replace(/^data:image\\/[^;]+/, \"data:application/octet-stream\"))\n\t\t\t: Share.share({ message: \"Akvelon PixelArt \" + remoteImg.uri });\n\t}, [remoteImg]);\n\n\tlet renderImageInput = () => (\n\t\t<>\n\t\t\t<Text color={Color.GRAY}>\n\t\t\t\t{Constants.platform?.web\n\t\t\t\t\t? \"Tap to pick\\nan image\"\n\t\t\t\t\t: \"Tap to pick\\nor hold to\\nlaunch camera\"}\n\t\t\t</Text>\n\t\t\t<Circ onPress={() => handleImageInput(pick)} onLongPress={() => handleImageInput(snap)} />\n\t\t</>\n\t);\n\n\tlet renderProgress = () => (\n\t\t<>\n\t\t\t<Rect />\n\t\t\t{needAuth ? (\n\t\t\t\t<>\n\t\t\t\t\t<Text color={Color.GRAY}>{\"You need\\nto sign up\\nto continue\"}</Text>\n\t\t\t\t\t<Button onPress={logIn}>Sign Up</Button>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<Text color={Color.GRAY}>{flowStep}</Text>\n\t\t\t)}\n\t\t</>\n\t);\n\n\tif (!fontsLoaded) return null;\n\treturn (\n\t\t<>\n\t\t\t<StatusBar style=\"auto\" />\n\t\t\t<Layout\n\t\t\t\t{...screen}\n\t\t\t\theader=\"Pixel Art\"\n\t\t\t\tfooter={`Akvelon © ${YEAR}`}\n\t\t\t\tonPressFooter={handleAboutWindow}>\n\t\t\t\t<Card\n\t\t\t\t\timage={localImg}\n\t\t\t\t\tcaption=\"Tap to reset\"\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tsetLocalImg(null!);\n\t\t\t\t\t\tsetRemoteImg(null!);\n\t\t\t\t\t}}\n\t\t\t\t\tfallback={renderImageInput()}\n\t\t\t\t/>\n\t\t\t\t<Card\n\t\t\t\t\timage={remoteImg}\n\t\t\t\t\tcaption={`Tap to ${Constants.platform?.web ? \"open in new tab\" : \"share\"}`}\n\t\t\t\t\tonPress={handleShare}\n\t\t\t\t\tfallback={renderProgress()}\n\t\t\t\t/>\n\t\t\t</Layout>\n\t\t</>\n\t);\n}\n","import { useEffect, useState } from \"react\";\nimport { Dimensions } from \"react-native\";\n\nexport function useScreen() {\n\tlet [width, setWidth] = useState(Dimensions.get(\"window\").width);\n\tlet [height, setHeight] = useState(Dimensions.get(\"window\").height);\n\n\tlet updateScreen = () => {\n\t\tlet { width, height } = Dimensions.get(\"window\");\n\t\tsetWidth(width);\n\t\tsetHeight(height);\n\t};\n\n\tuseEffect(() => {\n\t\tDimensions.addEventListener(\"change\", updateScreen);\n\t\treturn () => {\n\t\t\tDimensions.removeEventListener(\"change\", updateScreen);\n\t\t};\n\t}, []);\n\n\treturn [{ width, height }];\n}\n","import Constants from \"expo-constants\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport { Auth0Client, IdToken } from \"@auth0/auth0-spa-js\";\n\nimport { LogIn, LogOut } from \"./useAuth0\";\n\nexport function useAuth0(): [IdToken, LogIn, LogOut] {\n\tlet client = useRef(\n\t\tnew Auth0Client({\n\t\t\tdomain: Constants.manifest.extra.authDomain,\n\t\t\tclient_id: Constants.manifest.extra.authClientId,\n\t\t\tredirect_uri: Constants.manifest.extra.authRedirectUri,\n\t\t\tcacheLocation: \"localstorage\",\n\t\t})\n\t);\n\n\tlet [user, setUser] = useState<IdToken>(null!);\n\tlet logOut = useCallback(() => client.current.logout(), [client.current]);\n\tlet logIn = useCallback(\n\t\t() => client.current.loginWithPopup().then(() => client.current.getUser().then(setUser)),\n\t\t[client.current]\n\t);\n\n\tuseEffect(() => {\n\t\tif (window.location.pathname === \"/auth\") {\n\t\t\tclient.current.handleRedirectCallback().then(async () => {\n\t\t\t\tlet user = await client.current.getUser();\n\t\t\t\tsetUser(user);\n\t\t\t\twindow.history.pushState({}, document.title, \"\");\n\t\t\t});\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (user === null)\n\t\t\tclient.current.getTokenSilently().then(() => {\n\t\t\t\tclient.current.getUser().then(setUser);\n\t\t\t});\n\t}, []);\n\n\treturn [user, logIn, logOut];\n}\n"],"sourceRoot":""}